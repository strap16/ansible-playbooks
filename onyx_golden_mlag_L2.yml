---
- name: onyx_golden_mlag_L2_playbook
  hosts: golden_onyx
  gather_facts: no
  strategy: free
  connection: network_cli
  become: yes
  become_method: enable
  vars:
    #ansible_python_interpreter: /usr/bin/python3
    send_mail: False
    ansible_network_os: onyx
    reset: factory
    clean_config: "True"
    wait_for_protocol_port: 22
    force_upgrade_downgrade: "True"
    local_path: "/mswg/release/sx_mlnx_os/"
    destination_folder: "/var/opt/tms/images"
    reload: "True"
    transfer_protocol: scp
    cpu: "X86_64"   # X86_64 | PPC_M460EX
    user: root
    password: password
    remote_ip: remote_server
    internal_network: "no"
    ntp_server: "216.239.35.0"
    version: 3.8.2204
    source_file: "{{local_path}}/sx_mlnx_os-{{ version }}/{{ cpu  }}/image-{{ cpu }}-{{ version }}.img"
    software_upgrade: "False"
    change_hostname: "True"
    log_path: ./ansible.log
    debug: True
  tasks:


    - import_role:
        name: onyx_clean_config
      tags: clean_config
      when: clean_config == "True"

    - import_role:
        name: onyx_wait
      when: clean_config == "True"
      tags: wait1

    #- name: remove_known_host_entries
    #  onyx_config:
    #   commands: ssh client user admin known-host "{{remote_ip}}" remove

    - import_role:
        name: onyx_config
      vars:
        command:
            - no interface mgmt0 dhcp hostname
            - hostname {{ inventory_hostname }}
      when: change_hostname == "True"
      tags: change_hostname

    - import_role:
        name: onyx_upgrade
      when: software_upgrade == "True"
      tags: onyx_upgrade

    - import_role:
        name: onyx_wait
      tags: wait2
      when: software_upgrade == "True"

    - import_role:
        name: onyx_basic_lab_mgmt_config
      tags: basic_config

    - import_role:
        name: mlag
      tags: mlag

    - import_role:
       name: onyx_config
      vars:
       command:
         - configuration write
      when: change_hostname == "True"
      tags: change_hostname


    - import_role:
       name: send_mail
      vars:
       mail_body: "Playbook used: {{ansible_play_name}} "
       mail_server: "10.0.8.70"
       mail_subject: "GSO Network Golden lab: do-not-reply: {{ inventory_hostname }} has been successfully provisioned"
       mail_from: "eddies@mellanox.com"
       mail_to_list:
          - eddies@mellanox.com
          - hagaia@mellanox.com
          - marlon@mellanox.com
          - denisyu@mellanox.com
          - oria@mellanox.com
      when: send_mail == "True"
      tags: send_mail == "True"
